@model test_dotnet_app_mvc.Models.Product

@{
    ViewBag.Title = "添加新产品";
}

@*<head>

        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1">
        <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.6.2/dist/css/bootstrap.min.css">
        <script src="https://cdn.jsdelivr.net/npm/jquery@3.6.4/dist/jquery.slim.min.js"></script>
        <script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.1/dist/umd/popper.min.js"></script>
        <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.6.2/dist/js/bootstrap.bundle.min.js"></script>
    </head>*@

<script src="~/js/createProduct.js"></script>

<h2>@ViewBag.Title</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="card" id="basic-info">
        <div class="card-body">
            <h5 class="card-title">基本信息</h5>
            <p class="card-text">

                <div class="form-group">
                    @Html.LabelFor(model => model.AREA)
                    @Html.TextBoxFor(model => model.AREA, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.AREA)
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.COUNTRY)
                    @Html.TextBoxFor(model => model.COUNTRY, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.COUNTRY)
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.TYPE)
                    @Html.TextBoxFor(model => model.TYPE, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.TYPE)
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.NAME)
                    @Html.TextBoxFor(model => model.NAME, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.NAME)
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.DAYS)
                    @Html.TextBoxFor(model => model.DAYS, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.DAYS)
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.NIGHTS)
                    @Html.TextBoxFor(model => model.NIGHTS, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.NIGHTS)
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.DEPARTURE)
                    @Html.TextBoxFor(model => model.DEPARTURE, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.DEPARTURE)
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.LEAVE_GROUP_CITY)
                    @Html.TextBoxFor(model => model.LEAVE_GROUP_CITY, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.LEAVE_GROUP_CITY)
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.IMAGEURLS)
                    @Html.TextBoxFor(model => model.IMAGEURLS, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.IMAGEURLS)
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.REASON)
                    @Html.TextBoxFor(model => model.REASON, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.REASON)
                </div>
            </p>
           

        </div>
    </div>

    <div class="card" id="schedule" hidden>
        <div class="card-body">
            <h5 class="card-title">行程安排</h5>
            <p class="card-text">

                <div class="form-group">
                    @Html.LabelFor(model => model.DESCRIPTION)
                    @Html.TextBoxFor(model => model.DESCRIPTION, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.DESCRIPTION)
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.TRANSPORTATION)
                    @Html.TextBoxFor(model => model.TRANSPORTATION, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.TRANSPORTATION)
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.HOTEL)
                    @Html.TextBoxFor(model => model.HOTEL, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.HOTEL)
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.MEALS)
                    @Html.TextBoxFor(model => model.MEALS, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.MEALS)
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ATTRACTIONS)
                    @Html.TextBoxFor(model => model.ATTRACTIONS, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.ATTRACTIONS)
                </div>
            </p>

        </div>
    </div>

    <div class="card" id="price-inventory" hidden>
        <div class="card-body">
            <h5 class="card-title">價格庫存</h5>
            <p class="card-text">

                <div class="form-group">
                    @Html.LabelFor(model => model.GROUP_DATE)
                    @Html.TextBoxFor(model => model.GROUP_DATE, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.GROUP_DATE)
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.BOOK_BY_DATE)
                    @Html.TextBoxFor(model => model.BOOK_BY_DATE, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.BOOK_BY_DATE)
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ADULT_PRICE)
                    @Html.TextBoxFor(model => model.ADULT_PRICE, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.ADULT_PRICE)
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.CHILD_PRICE)
                    @Html.TextBoxFor(model => model.CHILD_PRICE, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.CHILD_PRICE)
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.SENIOR_PRICE)
                    @Html.TextBoxFor(model => model.SENIOR_PRICE, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.SENIOR_PRICE)
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.NIGHTS)
                    @Html.TextBoxFor(model => model.NIGHTS, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.NIGHTS)
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.DEPARTURE)
                    @Html.TextBoxFor(model => model.DEPARTURE, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.DEPARTURE)
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.LEAVE_GROUP_CITY)
                    @Html.TextBoxFor(model => model.LEAVE_GROUP_CITY, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.LEAVE_GROUP_CITY)
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.IMAGEURLS)
                    @Html.TextBoxFor(model => model.IMAGEURLS, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.IMAGEURLS)
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.REASON)
                    @Html.TextBoxFor(model => model.REASON, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.REASON)
                </div>
            </p>

        </div>
    </div>

    <div class="card" id="notices" hidden>
        <div class="card-body">
            <h5 class="card-title">注意事項</h5>
            <p class="card-text">

                <div class="form-group">
                    @Html.LabelFor(model => model.PRICE_INCLUSIVE)
                    @Html.TextBoxFor(model => model.PRICE_INCLUSIVE, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.PRICE_INCLUSIVE)
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.PRICE_EXCLUSIVE)
                    @Html.TextBoxFor(model => model.PRICE_EXCLUSIVE, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.PRICE_EXCLUSIVE)
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.REFUND_CHANGE_DESCRIPTION)
                    @Html.TextBoxFor(model => model.REFUND_CHANGE_DESCRIPTION, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.REFUND_CHANGE_DESCRIPTION)
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.REMARK)
                    @Html.TextBoxFor(model => model.REMARK, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.REMARK)
                </div>
            </p>

        </div>
    </div>



    <div class="form-group">
        <button type="submit" class="btn btn-primary">保存</button>
        <button class="btn btn-primary" id="continueBtn">继续</button>
        <button class="btn btn-primary" id="backBtn">返回</button>

        @Html.ActionLink("Cancel", "Index", "Home", null, new { @class = "btn btn-link" })
    </div>
}


<script>
    $(document).ready(function () {

        updateActiveNavToAdmin();

        document.getElementById("continueBtn").addEventListener("click", function (event) {
            continueBtnClicked(event);
        });
        document.getElementById("backBtn").addEventListener("click", function (event) {
            backBtnClicked(event);
        });

    });
</script>
