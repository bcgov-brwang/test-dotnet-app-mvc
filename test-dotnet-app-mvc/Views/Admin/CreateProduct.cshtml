@model test_dotnet_app_mvc.Models.Product

@{
    ViewBag.Title = "添加新产品";
}

<head>
    @*<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
        <script src="http://code.jquery.com/ui/1.11.0/jquery-ui.js"></script>*@

    <script src="http://code.jquery.com/jquery-1.9.1.js"></script>
    <script src="http://code.jquery.com/ui/1.11.0/jquery-ui.js"></script>

    <link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.9.0/css/bootstrap-datepicker.min.css" rel="stylesheet" />
    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.9.0/js/bootstrap-datepicker.min.js"></script>

    @*<meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1">
        <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.6.2/dist/css/bootstrap.min.css">
        <script src="https://cdn.jsdelivr.net/npm/jquery@3.6.4/dist/jquery.slim.min.js"></script>
        <script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.1/dist/umd/popper.min.js"></script>
        <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.6.2/dist/js/bootstrap.bundle.min.js"></script>*@
</head>

<script src="~/js/createProduct.js"></script>

<h2>@ViewBag.Title</h2>

@*@using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()*@

<form asp-action="CreateProduct" method="post" enctype="multipart/form-data">

    <div class="card" id="basic-info">
        <div class="card-body">
            <h5 class="card-title">基本信息</h5>
            <p class="card-text">

                <table class="table table-striped">
                    @*<thead>
                <tr>
                    <th>Column 1</th>
                    <th>Column 2</th>
                    <th>Column 3</th>
                </tr>
            </thead>*@
                    <tbody>
                        <tr>
                            <td>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.AREA, new { @id = "areaLabel" })
                                    @{
                                        var optionsListArea = new List<SelectListItem>
                                                                                                {
                                            new SelectListItem { Value = "eu", Text = "欧洲" },
                                            new SelectListItem { Value = "as", Text = "亚洲" },
                                            new SelectListItem { Value = "am", Text = "北美洲" }
                                        };
                                    }
                                    @Html.DropDownListFor(m => m.AREA, new SelectList(optionsListArea, "Value", "Text"), "-- 请选择 --")
                                </div>
                            </td>
                            <td>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.COUNTRY, new { @id = "countryLabel" })

                                    @{
                                        var optionsListCountry = new List<SelectListItem>
                                                                                                                                                {
                                        new SelectListItem { Value = "us", Text = "美国" },
                                        new SelectListItem { Value = "ca", Text = "加拿大" },
                                        new SelectListItem { Value = "ja", Text = "日本" }
                                    };
                                    }
                                    @Html.DropDownListFor(m => m.COUNTRY, new SelectList(optionsListCountry, "Value", "Text"), "-- 请选择 --")
                                </div>
                            </td>
                            <td>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.PRODUCT_TYPE, new { @id = "typeLabel" })
                                    @{
                                        var optionsList = new List<SelectListItem>
                                                                                        {
                                        new SelectListItem { Value = "1", Text = "组团游" },
                                        new SelectListItem { Value = "2", Text = "自由行" },
                                        new SelectListItem { Value = "3", Text = "目的地参团" }
                                    };
                                    }
                                    @Html.DropDownListFor(m => m.PRODUCT_TYPE, new SelectList(optionsList, "Value", "Text"), "-- 请选择 --")
                                </div>
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <div class="form-group">
                                    @Html.CheckBoxFor(m => m.IS_ON_HOMEPAGE)
                                    @Html.LabelFor(m => m.IS_ON_HOMEPAGE, "显示在主页")
                                </div>
                            </td>
                            <td>
                                <div class="form-group">
                                    @Html.CheckBoxFor(m => m.IS_RECOMMENDED)
                                    @Html.LabelFor(m => m.IS_RECOMMENDED, "推荐产品")
                                </div>
                            </td>
                            <td>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.NAME, new { @id = "productNameLabel" })
                                    @Html.TextBoxFor(model => model.NAME, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.NAME)
                                </div>
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.DAYS, new { @id = "daysLabel" })
                                    @Html.TextBoxFor(model => model.DAYS, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.DAYS)
                                </div>
                            </td>
                            <td>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.NIGHTS, new { @id = "nightsLabel" })
                                    @Html.TextBoxFor(model => model.NIGHTS, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.NIGHTS)
                                </div>
                            </td>
                            <td>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.DEPARTURE, new { @id = "departureLabel" })
                                    @Html.TextBoxFor(model => model.DEPARTURE, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.DEPARTURE)
                                </div>
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.LEAVE_GROUP_CITY, new { @id = "leaveGroupLabel" })
                                    @Html.TextBoxFor(model => model.LEAVE_GROUP_CITY, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.LEAVE_GROUP_CITY)
                                </div>
                            </td>
                            <td>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.IMAGEURLS, new { @id = "imageUrlsLabel" })
                                    <input type="file" name="images" class="form-control" multiple />
                                </div>
                            </td>
                            <td>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.REASON, new { @id = "recommendReasonLabel" })
                                    @Html.TextAreaFor(model => model.REASON, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.REASON)
                                </div>
                            </td>
                        </tr>
                    </tbody>
                </table>
            </p>
        </div>
    </div>

    <div class="card" id="schedule" hidden>
        <div class="card-body">
            <h5 class="card-title">行程安排</h5>
            <p class="card-text">
                <table class="table table-striped">
                    <tbody>
                        <tr>
                            <td>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.DESCRIPTION, new { @id = "shortDescriptionLabel" })
                                    @Html.TextBoxFor(model => model.DESCRIPTION, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.DESCRIPTION)
                                </div>

                            </td>
                            <td>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.TRANSPORTATION, new { @id = "transportationLabel" })
                                    @Html.TextBoxFor(model => model.TRANSPORTATION, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.TRANSPORTATION)
                                </div>
                            </td>
                           
                        </tr>
                        <tr>
                            <td>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.HOTEL, new { @id = "hotelLabel" })
                                    @Html.TextBoxFor(model => model.HOTEL, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.HOTEL)
                                </div>
                            </td>
                            <td>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.MEALS, new { @id = "mealsLabel" })
                                    @Html.TextBoxFor(model => model.MEALS, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.MEALS)
                                </div>
                            </td>
                            
                        </tr>
                        <tr>
                            <td>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.ATTRACTIONS, new { @id = "attractionsLabel" })
                                    @Html.TextBoxFor(model => model.ATTRACTIONS, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.ATTRACTIONS)
                                </div>
                            </td>
                            <td></td>
                           
                        </tr>
                    </tbody>
                </table>           
            </p>

        </div>
    </div>

    <div class="card" id="price-inventory" hidden>
        <div class="card-body">
            <h5 class="card-title">价格库存</h5>
            <p class="card-text">

                <table class="table table-striped">
                    <tbody>
                        <tr>
                            <td>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.GROUP_DATE, new { @id = "groupDateLabel" })
                                    @*@Html.TextBoxFor(model => model.GROUP_DATE, new { @class = "form-control" })*@
                                    @Html.ValidationMessageFor(model => model.GROUP_DATE)
                                    <input asp-for="@Model.GROUP_DATE" class="form-control datepicker" />
                                </div>
                            </td>
                            <td>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.BOOK_BY_DATE, new { @id = "bookByDateLabel" })
                                    @*@Html.TextBoxFor(model => model.BOOK_BY_DATE, new { @class = "form-control" })*@
                                    @Html.ValidationMessageFor(model => model.BOOK_BY_DATE)
                                    <input asp-for="@Model.BOOK_BY_DATE" class="form-control datepicker" />
                                </div>
                            </td>
                            
                        </tr>
                        <tr>
                            <td>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.ADULT_PRICE, new { @id = "adultPriceLabel" })
                                    @Html.TextBoxFor(model => model.ADULT_PRICE, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.ADULT_PRICE)
                                </div>
                            </td>
                            <td>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.CHILD_PRICE, new { @id = "childPriceLabel" })
                                    @Html.TextBoxFor(model => model.CHILD_PRICE, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.CHILD_PRICE)
                                </div>
                            </td>
                            <td>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.SENIOR_PRICE, new { @id = "seniorPriceLabel" })
                                    @Html.TextBoxFor(model => model.SENIOR_PRICE, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.SENIOR_PRICE)
                                </div>
                            </td>
                        </tr>
                        
                    </tbody>
                </table>
            </p>

        </div>
    </div>

    <div class="card" id="notices" hidden>
        <div class="card-body">
            <h5 class="card-title">注意事項</h5>
            <p class="card-text">
                <table class="table table-striped">
                    <tbody>
                        <tr>
                            <td>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.PRICE_INCLUSIVE, new { @id = "priceInclusiveLabel" })
                                    @Html.TextAreaFor(model => model.PRICE_INCLUSIVE, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.PRICE_INCLUSIVE)
                                </div>
                            </td>
                            <td>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.PRICE_EXCLUSIVE, new { @id = "priceExclusiveLabel" })
                                    @Html.TextAreaFor(model => model.PRICE_EXCLUSIVE, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.PRICE_EXCLUSIVE)
                                </div>
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.REFUND_CHANGE_DESCRIPTION, new { @id = "refundChangeDescriptionLabel" })
                                    @Html.TextAreaFor(model => model.REFUND_CHANGE_DESCRIPTION, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.REFUND_CHANGE_DESCRIPTION)
                                </div>
                            </td>
                            <td>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.REMARK, new { @id = "remarkLabel" })
                                    @Html.TextAreaFor(model => model.REMARK, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.REMARK)
                                </div>
                            </td>
                        </tr>
                    </tbody>
                </table>

                

                

                

                
            </p>

        </div>
    </div>



    <div class="form-group">
        <button type="submit" class="btn btn-primary" disabled id="saveBtn">保存</button>
        <button class="btn btn-primary" id="continueBtn">下一步</button>
        <button class="btn btn-primary" id="backBtn">上一步</button>

        @Html.ActionLink("清空退出", "Index", "Home", null, new { @class = "btn btn-link" })
    </div>

</form>

@*  *@}

<div>

    @*<form asp-action="UploadImage" asp-controller="Admin" method="post" enctype="multipart/form-data">
            <input type="file" name="imageFile" />
            <input type="submit" value="Upload" />
        </form>*@
</div>


<script>
    $(document).ready(function () {

        updateActiveNavToAdmin();

        createProductInit();

        document.getElementById("continueBtn").addEventListener("click", function (event) {
            continueBtnClicked(event);
        });
        document.getElementById("backBtn").addEventListener("click", function (event) {
            backBtnClicked(event);


        });

    });
</script>
